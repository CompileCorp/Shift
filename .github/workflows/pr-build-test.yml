name: PR Build and Test

# Trigger only on pull requests
on:
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4
        
    # Send Slack notification immediately when PR is opened
    - name: Notify PR opened
      if: github.event.action == 'opened'
      run: |
        curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"ðŸ”” New Pull Request: <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}> by ${{ github.event.pull_request.user.login }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

    # Setup .NET 9.0.x 
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    # Restore all NuGet packages for the solution
    - name: Restore dependencies
      run: dotnet restore src/Shift.slnx
      
    # Check code formatting - fail if there are pending formatting changes
    - name: Check code formatting
      run: |
        dotnet format src/Shift.slnx
        if [ -n "$(git status --porcelain)" ]; then
          echo "::error::Code formatting check failed. Please run 'dotnet format' and commit the changes."
          git diff
          exit 1
        fi
      
    # Build the entire solution in Release configuration
    - name: Build solution
      run: dotnet build src/Shift.slnx --configuration Release --no-restore

    # Run all tests in the solution with TRX logger for test reporting
    # This will automatically discover and run all test projects
    - name: Run tests
      run: dotnet test src/Shift.slnx --configuration Release --no-build --verbosity normal --logger "trx" --results-directory TestResults
      continue-on-error: true
      
    # Publish test results to GitHub PR interface for clear visual feedback
    # Uses wildcard pattern to collect all TRX files from all test projects
    - name: Publish Test Results
      uses: dorny/test-reporter@v2
      if: always()
      with:
        name: Test Results
        path: TestResults/*.trx
        reporter: dotnet-trx
        fail-on-error: true
